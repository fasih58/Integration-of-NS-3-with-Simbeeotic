<?xml version="1.0"?>
<!--

    Copyright (c) 2012, The President and Fellows of Harvard College.
    All Rights Reserved.

     Redistribution and use in source and binary forms, with or without
     modification, are permitted provided that the following conditions
     are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. Neither the name of the University nor the names of its contributors
        may be used to endorse or promote products derived from this software
        without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY AND CONTRIBUTORS ``AS IS'' AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED.  IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
    OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.

-->

<scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://harvard/robobees/simbeeotic/configuration/scenario"
          xsi:schemaLocation="http://harvard/robobees/simbeeotic/configuration/scenario http://some/path/to/schema.xsd">

    <!-- the idea of this scenario is to showcase the capabilities of parameter variation.
         not every feature is shown, but many useful aspects are highlighted. variables
         can be used to construct "gridded" and monte-carlo analyses, amongst others. -->

    <master-seed>

        <!-- the master seed itself can be a variable instead of a constant value. here
             there will be three values drawn from a uniform distribution. these values will
             each see a random number generator that is used to seed other random variables.
             since there are 3 values, the total number of variations for this scenario will
             be three times the number of variations defined by the variables below. -->
        <variable>
            <uniform-random from="0" to="10000000" num-draws="3" seed="112181" seed-source="USER"/>
        </variable>
    </master-seed>

    <simulation>
        <end-time>5.0</end-time>
    </simulation>

    <models>
        <model>
            <java-class>harvard.robobees.simbeeotic.model.InertHive</java-class>
            <start-position x="0" y="0" z="0" />
        </model>
        <model>
            <java-class>harvard.robobees.simbeeotic.example.RandomWalkBee</java-class>

            <!-- variable placeholders can be used in property values for the hive and bees. -->
            <properties>
                <prop name="length" value="${bee.len}"/>

                <!-- the mass variable has a default value -->
                <prop name="mass" value="${bee.mass}:0.1"/>
            </properties>
        </model>
    </models>

    <looping>
        <variables>

            <!-- will step evenly through a range of values -->
            <variable name="bee.len">
                <for from="0.2" to="0.3" step="0.01"/>
            </variable>

            <!-- draws 1 value from a norml distribution. it uses a seed drawn from the master random stream -->
            <variable name="bee.mass">
                <normal-random mean="0.1" std-dev="0.02" seed-source="RANDOM_STREAM"/>
            </variable>

            <!-- will select the values (in order) from the given list -->
            <variable name="bee.range-sigma">
                <each>
                    <value>0.1</value>
                    <value>0.13</value>
                    <value>0.32</value>
                </each>
            </variable>
        </variables>
    </looping>
</scenario>